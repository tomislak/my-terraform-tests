---
- name: Ansible app server setup playbook
  gather_facts: false
  hosts: _DbServer
  vars:
    ansible_user: ec2-user
    ansible_ssh_private_key_file: "/home/etokral/.ssh/id_rsa.pub"
  tasks:
    - name: Inatall postgres packages
      yum:
        name: "{{ packages }}"
        state: present 
      vars:
        packages:
        - postgresql
        - postgresql-server
      become: true
    - name: Install pip module
      pip:
        executable: pip3
        name: psycopg2-binary
        state: present
      become: true

    - name: Check if postgres is initialized
      ansible.builtin.stat:
        path: /var/lib/pgsql/data/pg_hba.conf
      register: postgres_data
      become: true
    - name: Initialize postgres
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists
      become: true
    - name: Start and enable postgres service
      systemd:
        name: postgresql
        state: started
        enabled: yes
      become: true

    - name: Create aplication database
      postgresql_db:
        state: present
        name: hostDate
      become: yes
      become_user: postgres
      vars:
        ansible_python_interpreter: /usr/bin/python3
    - name: Create db user
      postgresql_user:
        state: present
        name: hostDate
        password: hostDate
      become: yes
      become_user: postgres
      vars:
        ansible_python_interpreter: /usr/bin/python3
    - name: Grant db user to app db
      postgresql_privs:
        type: database
        database: hostDate
        roles: hostDate
        grant_option: no
        privs: all
      become: yes
      become_user: postgres
      vars:
        ansible_python_interpreter: /usr/bin/python3
    - name: Allow md5 connection
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: hostDate
        address: samenet
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres
      vars:
        ansible_python_interpreter: /usr/bin/python3
    - name: Allow local md5 connection
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: local
        databases: all
        method: md5
        users: hostDate
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres
      vars:
        ansible_python_interpreter: /usr/bin/python3
    - name: Set up listening on all ip addresses
      lineinfile:
        path: /var/lib/pgsql/data/postgresql.conf
        regexp: "^listen_addresses"
        line: "listen_addresses = '*'"
        state: present
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: Create table
      postgresql_table:
        db: hostDate
        name: hostdate
        owner: hostDate
        columns:
        - id bigserial primary key
        - stringhost text
        - stringdate text
      become: yes
      become_user: postgres
      vars:
        ansible_python_interpreter: /usr/bin/python3

  handlers:
    - name: restart postgres
      systemd:
        name: postgresql
        state: restarted
      become: yes
